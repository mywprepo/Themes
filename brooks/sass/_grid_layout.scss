
$grid-item-ratio: 0.9; // 1 - square, < 1 - horizontal rectangle, > 1 - vertical rectangle

@mixin grid-item($columns, $col-size, $rel:0) {
    width: 100% * $col-size / $columns;
    @if ($rel > 0){ padding-bottom: 100% * $grid-item-ratio / $columns };
}

.theme__grid {
	@for $i from 1 through 12 {
		&.grid__columns__#{$i} {
            &.grid__type__simple {
              .grid__item[class*="item__height__"][class*="item__width__"] {
                width: 100% * 1 / $i !important;
                padding-bottom: 100% * $grid-item-ratio / $i !important;

                @media (max-width: 767px) {
                  width: 100% * 1 / 1 !important;
                  padding-bottom: 100% * $grid-item-ratio / 1 !important;
                }

                @media (min-width: 768px) and (max-width: 991px) {
                  @if($i >= 2) {
                    width: 100% * 1 / 2 !important;
                    padding-bottom: 100% * $grid-item-ratio / 2 !important;
                  } @else {
                    width: 100% * 1 / 1 !important;
                    padding-bottom: 100% * $grid-item-ratio / 1 !important;
                  }
                }

                @media (min-width: 992px) and (max-width: 1199px) {
                  @if($i >= 3) {
                    width: 100% * 1 / 3 !important;
                    padding-bottom: 100% * $grid-item-ratio / 3 !important;
                  } @else {
                    width: 100% * 1 / $i !important;
                    padding-bottom: 100% * $grid-item-ratio / $i !important;
                  }
                }
              }
            }

			.grid__item {
				@include grid-item($i, 1);

                @media (max-width: 767px) {
                  @include grid-item(1, 1);
                }

				@media (min-width: 768px) and (max-width: 991px) {
					@if($i >=2) {
						@include grid-item(2, 1);
					} @else {
						@include grid-item(1, 1);
					}
				}

				@media (min-width: 992px) and (max-width: 1199px) {
					@if($i >= 3) {
						@include grid-item(3, 1);
					} @else {
						@include grid-item($i, 1);
					}
				}

				@for $j from 1 through $i {
                  &.item__width__#{$j} {
                    @include grid-item($i, $j, 1);
                  }
                  &.item__height__#{$j} {
                    padding-bottom: 100% * $grid-item-ratio * $j / $i !important;
                  }

                  @media (max-width: 767px) {
                    &.item__width__#{$j} {
                      @include grid-item(1, 1, 1);

                      @for $k from 1 through $i {
                        &.item__height__#{$k} {
                          padding-bottom: 100% * $grid-item-ratio * $k / $j !important;
                        }
                      }
                    }
                  }

                  @if ($i > 2) {
                    @media (min-width: 768px) and (max-width: 991px) {

                      &.item__width__#{$j} {
                        @if $j > $i/2 {
                          @include grid-item(2, 2, 1);

                          @for $k from 1 through $i {
                            &.item__height__#{$k} {
                              padding-bottom: 100% * $grid-item-ratio * ($k / $j) !important;
                            }
                          }
                        } @else {
                          @include grid-item(2, 1, 1);

                          @for $k from 1 through $i {
                            &.item__height__#{$k} {
                              padding-bottom: 100% * $grid-item-ratio * ($k / $j) / 2 !important;
                            }
                          }
                        }
                      }
                    }
                  }

                  @if ($i > 3) {
                    @media (min-width: 992px) and (max-width: 1199px) {

                      &.item__width__#{$j} {
                        @if $j > $i * 2 / 3 {
                          @include grid-item(3, 3, 1);

                          @for $k from 1 through $i {
                            &.item__height__#{$k} {
                              padding-bottom: 100% * $grid-item-ratio * ($k / $j) !important;
                            }
                          }
                        } @else {
                          @include grid-item(3, 1, 1);

                          @for $k from 1 through $i {
                            &.item__height__#{$k} {
                              padding-bottom: 100% * $grid-item-ratio * ($k / $j) / 3 !important;
                            }
                          }
                        }
                      }
                    }
                  }

					@if($i == 1) {
						&.item__height__2 {
							padding-bottom: 100% * $grid-item-ratio * 2 / $i !important;
						}

						&.item__height__1.item__width__2 {
							padding-bottom: 100% * $grid-item-ratio / 2 !important;
						}
					}
                }
			}
		}
	}

	.grid__item {
		position: absolute;
		background-size: cover;
		background-position: center;

		.grid__item__content__wrap {
			position: absolute;
			top: 0;
			left: 0;
			height: 100%;
			width: 100%;
			display: block;
			.grid__item__content {
				position: relative;
				height: 100%;
				width: 100%;
				left: 0;
				top: 0;
			}
		}

	}

	&.grid__type__masonry {
		.grid__item {
			.grid__item__content__wrap {
				position: relative;
			}
		}
	}


	&.grid__type__metro,
	&.grid__type__simple {
		.grid__item {
			.grid__item__content__wrap {
				.grid__item__content {
					@include display(flex);
					@include flex-direction(row);
					@include align-items(stretch);
					&.content__align__top {
					  @include align-items(flex-start);
					}
					&.content__align__bottom {
					  @include align-items(flex-end);
					}
					&.content__align__center {
					  @include align-items(center);
					}
					&.content__align__stretch {
					  @include align-items(stretch);
					}
				}
			}
		}
	}
}

.theme__grid__wrap  {
	&.-gap__15 {
		.grid__item {
			.grid__item__content__wrap {
				padding: 7.5px;
			}
		}
	}
	&.-gap__30 {
		.grid__item {
			.grid__item__content__wrap {
				padding: 15px;
			}
		}
	}
}